{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\OneDrive\\\\Desktop\\\\MCIT\\\\CIT 550\\\\550\\\\550\\\\CIS5500FinalProject\\\\client\\\\src\\\\pages\\\\PlayersPage.js\";\nimport React from 'react';\nimport MovieDetailsCard from '../components/MovieDetailsCard';\nimport \"./MovieDetailsPage.css\"; // import { images } from '../../constants';\n\nimport { getMovie } from '../fetcher';\nimport MenuBar from '../components/MenuBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movieDetail1 = [{\n  \"Title\": \"Inception\",\n  \"Year\": 2010,\n  \"Language\": \"en\",\n  \"Overview\": \"Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \\\"inception\\\", the implantation of another person's idea into a target's subconscious.\",\n  \"Popularity\": 29.1081,\n  \"Runtime\": 148,\n  \"Type\": \"movie\",\n  \"Genres\": \"Action, Adventure, Mystery, Sci-Fi, ScienceFiction, Thriller\",\n  \"Companies\": \"Legendary Pictures, Syncopy, Warner Bros.\",\n  \"Countries\": \"United Kingdom, United States of America\",\n  \"SpokenLanguages\": \"English\",\n  \"PosterLink\": \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_.jpg\",\n  \"URL\": \"https://www.imdb.com/title/tt1375666/\",\n  \"RatingValue\": 8.8,\n  \"RatingCount\": 2050656\n}];\n\nclass PlayersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleQuery: '',\n      yearQuery: '',\n      selectedMovieDetailsId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\n      selectedMovieDetails: null,\n      movieDetailResults: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handleTitleQueryChange = this.handleTitleQueryChange.bind(this);\n    this.handleYearQueryChange = this.handleYearQueryChange.bind(this);\n  }\n\n  handleTitleQueryChange(event) {\n    this.setState({\n      titleQuery: event.target.value\n    });\n  }\n\n  handleYearQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      yearQuery: event.target.value\n    });\n  }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    getMovie(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\n      this.setState({\n        playersResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getMovie(this.state.titleQuery, this.state.YearQuery).then(res => {\n      this.setState({\n        movieDetailResults: res.results\n      });\n    }); // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \n    // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \n    // getPlayer(this.state.selectedPlayerId).then(res => {\n    //     this.setState({ selectedPlayerDetails: res.results[0] })\n    // })\n  }\n\n  render() {\n    var _this$state$movieDeta, _this$state$movieDeta2;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header app__wrapper section__padding\",\n        id: \"home\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__wrapper_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__wrapper_info\",\n          children: [((_this$state$movieDeta = this.state.movieDetailResults) === null || _this$state$movieDeta === void 0 ? void 0 : _this$state$movieDeta.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: this.state.movieDetailResults.map(title => /*#__PURE__*/_jsxDEV(MovieDetailsCard, {\n              movie: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty\",\n            children: [console.log(\"PRINTING!!!: \" + this.state.movieDetails), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: (_this$state$movieDeta2 = this.state.movieDetails) === null || _this$state$movieDeta2 === void 0 ? void 0 : _this$state$movieDeta2.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No movies found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"app__header-h1\",\n            children: \"Inception\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: \"Overview: Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \\\\\\\"inception\\\\\\\", the implantation of another person's idea into a target's subconscious. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: [\"Type: \", this.state.movieDetailResults.Type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: [\"Year: \", this.state.yearQuery, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: \"Country: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: \"Language:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: \"Genre: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: \"Popularity: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p__opensans\",\n            children: \"Runtime: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PlayersPage;","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Desktop/MCIT/CIT 550/550/550/CIS5500FinalProject/client/src/pages/PlayersPage.js"],"names":["React","MovieDetailsCard","getMovie","MenuBar","movieDetail1","PlayersPage","Component","constructor","props","state","titleQuery","yearQuery","selectedMovieDetailsId","window","location","search","substring","split","selectedMovieDetails","movieDetailResults","updateSearchResults","bind","handleTitleQueryChange","handleYearQueryChange","event","setState","target","value","nameQuery","nationalityQuery","clubQuery","ratingHighQuery","ratingLowQuery","potHighQuery","potLowQuery","then","res","playersResults","results","componentDidMount","YearQuery","render","length","map","title","console","log","movieDetails","Type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MovieDetailsCard from '../components/MovieDetailsCard';\r\nimport \"./MovieDetailsPage.css\";\r\n\r\n// import { images } from '../../constants';\r\nimport { getMovie } from '../fetcher'\r\nimport MenuBar from '../components/MenuBar';\r\n\r\nconst movieDetail1 = [{\"Title\":\"Inception\",\r\n\"Year\":2010,\r\n\"Language\":\"en\",\r\n\"Overview\":\"Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \\\"inception\\\", the implantation of another person's idea into a target's subconscious.\",\r\n\"Popularity\":29.1081,\r\n\"Runtime\":148,\r\n\"Type\":\"movie\",\r\n\"Genres\":\"Action, Adventure, Mystery, Sci-Fi, ScienceFiction, Thriller\",\r\n\"Companies\":\"Legendary Pictures, Syncopy, Warner Bros.\",\r\n\"Countries\":\"United Kingdom, United States of America\",\"SpokenLanguages\":\"English\",\r\n\"PosterLink\":\"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_.jpg\",\r\n\"URL\":\"https://www.imdb.com/title/tt1375666/\",\r\n\"RatingValue\":8.8,\r\n\"RatingCount\":2050656}]\r\n\r\nclass PlayersPage extends React.Component {\r\n  constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n          titleQuery: '',\r\n          yearQuery: '',\r\n          selectedMovieDetailsId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\r\n          selectedMovieDetails: null,\r\n          movieDetailResults: []\r\n\r\n      }\r\n\r\n      this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.handleTitleQueryChange = this.handleTitleQueryChange.bind(this)\r\n        this.handleYearQueryChange = this.handleYearQueryChange.bind(this)\r\n    }\r\n\r\n    handleTitleQueryChange(event) {\r\n      this.setState({ titleQuery: event.target.value })\r\n  }\r\n\r\n  handleYearQueryChange(event) {\r\n      // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n      this.setState({ yearQuery: event.target.value })\r\n  }\r\n\r\n\r\n  updateSearchResults() {\r\n\r\n      //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\r\n      getMovie(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\r\n          this.setState({ playersResults: res.results })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n      getMovie(this.state.titleQuery, this.state.YearQuery).then(res => {\r\n          this.setState({ movieDetailResults: res.results })\r\n      })\r\n\r\n      // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \r\n      // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \r\n      // getPlayer(this.state.selectedPlayerId).then(res => {\r\n      //     this.setState({ selectedPlayerDetails: res.results[0] })\r\n      // })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <MenuBar />\r\n\r\n            <div className=\"app__header app__wrapper section__padding\" id=\"home\">\r\n              <div className=\"app__wrapper_img\">\r\n              {/* <img src={movieDetail1.PosterLink !== \"N/A\" ? movieDetail1.PosterLink : \"https://via.placeholder.com/400\"} alt={movieDetail1.Title} /> */}\r\n              <img src ={\"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_.jpg\"}/>\r\n              </div>\r\n              <div className=\"app__wrapper_info\">\r\n                {/* <MovieDetailsCard title=\"Chase the new flavour\" /> */}\r\n\r\n                {this.state.movieDetailResults?.length > 0 ? (\r\n                                <div className=\"container\">\r\n                                    {this.state.movieDetailResults.map((title) => (\r\n                                        <MovieDetailsCard movie={title} />\r\n                                ))}\r\n                            </div>\r\n                            ) : (\r\n                            <div className=\"empty\">\r\n                                {console.log(\"PRINTING!!!: \" + this.state.movieDetails)}\r\n                                <h2>{this.state.movieDetails?.length}</h2>\r\n                                <h2>No movies found</h2>\r\n                            </div>\r\n                            )}\r\n\r\n                <h1 className=\"app__header-h1\">Inception</h1>\r\n                <p className=\"p__opensans\">Overview: Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \\\"inception\\\", the implantation of another person's idea into a target's subconscious. </p>\r\n                <p className=\"p__opensans\">Type: {this.state.movieDetailResults.Type}</p>\r\n                <p className=\"p__opensans\">Year: {this.state.yearQuery} </p>\r\n                <p className=\"p__opensans\">Country: </p>\r\n                <p className=\"p__opensans\">Language:  </p>\r\n                <p className=\"p__opensans\">Genre: </p>\r\n                <p className=\"p__opensans\">Popularity: </p>\r\n                <p className=\"p__opensans\">Runtime: </p>\r\n               \r\n\r\n                {/* <button type=\"button\" className=\"custom__button\">Explore Menu</button> */}\r\n              </div>\r\n\r\n    </div>\r\n  </div>\r\n    )}\r\n}\r\n\r\n    export default PlayersPage"]},"metadata":{},"sourceType":"module"}